<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="3fefb2c4-b6f9-466b-a523-53352e8d6f95" name="更改" comment=":bug: Fix oauth ticket need mfa">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/hyper/auth.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/hyper/auth_adaptor.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/hyper/conn.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/internal/gap/server.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/internal/gap/server.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/internal/grpc/auth.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/internal/grpc/auth.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/internal/grpc/server.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/internal/grpc/server.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/internal/i18n/bundle.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/internal/i18n/embed.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/internal/i18n/locale.en.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/internal/i18n/locale.zh.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/internal/i18n/middleware.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/internal/models/accounts.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/internal/models/accounts.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/internal/server/api/avatar_api.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/internal/server/api/avatar_api.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/internal/server/api/index.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/internal/server/api/index.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/internal/server/api/ws.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/internal/server/exts/auth.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/internal/server/exts/auth.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/internal/server/exts/cookies.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/internal/server/exts/cookies.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/internal/server/server.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/internal/server/server.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/internal/services/connections.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/internal/services/e2ee.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/internal/services/notifications.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/internal/services/notifications.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/internal/services/statuses.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/internal/services/statuses.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/proto/auth.pb.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/proto/auth.proto" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/proto/auth_grpc.pb.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/proto/friendships.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/proto/friendships.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/proto/friendships_grpc.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/proto/friendships_grpc.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/proto/notify.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/proto/notify.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/proto/notify_grpc.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/proto/notify_grpc.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/proto/realms.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/proto/realms.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/proto/realms_grpc.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/proto/realms_grpc.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/settings.toml" beforeDir="false" afterPath="$PROJECT_DIR$/settings.toml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///opt/homebrew/opt/go/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="master" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="ProjectErrors" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2fLXu43fjlLYVIGNrhGhOgBFq2O" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "Go Build.Backend.executor": "Run",
    "Go 构建.Backend.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.automatic.dependencies.download": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "git-widget-placeholder": "refactor/dealer",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/Users/littlesheep/Documents/Projects/Hydrogen/Passport/web/src/components/admin",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "run.code.analysis.last.selected.profile": "pProject Default",
    "settings.editor.selected.configurable": "preferences.pluginManager",
    "ts.external.directory.path": "/Users/littlesheep/Documents/Projects/Hydrogen/Passport/web/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/web/src/components/admin" />
      <recent name="$PROJECT_DIR$/web/src/views" />
      <recent name="$PROJECT_DIR$/pkg/internal/server/api" />
      <recent name="$PROJECT_DIR$/web" />
      <recent name="$PROJECT_DIR$/pkg/services" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/web/src/views/flow" />
      <recent name="$PROJECT_DIR$/pkg/internal/server/exts" />
      <recent name="$PROJECT_DIR$/pkg/internal/server/api" />
      <recent name="$PROJECT_DIR$/pkg/internal" />
      <recent name="$PROJECT_DIR$/pkg" />
    </key>
  </component>
  <component name="RunAnythingCache">
    <myKeys>
      <visibility group="Grunt" flag="true" />
      <visibility group="Gulp" flag="true" />
      <visibility group="HTTP 请求" flag="true" />
      <visibility group="Recent projects" flag="true" />
      <visibility group="Run configurations" flag="true" />
      <visibility group="npm" flag="true" />
      <visibility group="yarn" flag="true" />
    </myKeys>
  </component>
  <component name="RunManager">
    <configuration name="Backend" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="Passport" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="git.solsynth.dev/hydrogen/passport" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/pkg/main.go" />
      <output_directory value="$PROJECT_DIR$/dist" />
      <method v="2" />
    </configuration>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-33c477a475b1-e0158606a674-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-241.18034.61" />
        <option value="bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-GO-241.18034.61" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="dependencySupport" implementationName="javascript:npm:prettier" />
    <option featureType="dependencySupport" implementationName="executable:docker" />
    <option featureType="dependencySupport" implementationName="javascript:npm:unocss" />
    <option featureType="dependencySupport" implementationName="javascript:npm:vite" />
    <option featureType="dependencySupport" implementationName="executable:kubectl" />
    <option featureType="dependencySupport" implementationName="javascript:npm:vue" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="refactor/v2" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value=":bug: Not supposed to appear to status at the same time" />
    <MESSAGE value=":ambulance: Fix getting user panic again..." />
    <MESSAGE value=":bug: Fix status validation issue" />
    <MESSAGE value=":bug: Fix bugs in status" />
    <MESSAGE value=":bug: Fix status query condition" />
    <MESSAGE value=":bug: Fix disturbable condition" />
    <MESSAGE value=":sparkles: Admin notify all API" />
    <MESSAGE value=":bug: Fix request body validation" />
    <MESSAGE value=":bug: Fix API mapping issue" />
    <MESSAGE value=":recycle: Improve notify API" />
    <MESSAGE value=":sparkles: Reset password APIs" />
    <MESSAGE value=":sparkles: Password reset &amp; user lookup API" />
    <MESSAGE value=":recycle: Optimized the initial permission system" />
    <MESSAGE value=":zap: Optimized audit, event logging system&#10;:sparkles: Audit logs&#10;:sparkles: Admin edit user permissions" />
    <MESSAGE value=":sparkles: Admin force confirm account" />
    <MESSAGE value=":sparkles: Admin notify one user" />
    <MESSAGE value=":sparkles: Admin check users' auth factor" />
    <MESSAGE value=":sparkles: Admin panel &amp; users, users' permissions management" />
    <MESSAGE value=":bug: Fix clear function doesn't real clear items in slice" />
    <MESSAGE value=":sparkles: View auth factors" />
    <MESSAGE value=":sparkles: View auth factors in admin panel" />
    <MESSAGE value=":rotating_light: Fix ts lint issue" />
    <MESSAGE value=":poop: Remove mis-imported cgo" />
    <MESSAGE value=":bug: Bug fixes" />
    <MESSAGE value=":bug: Fix oauth ticket need mfa" />
    <option name="LAST_COMMIT_MESSAGE" value=":bug: Fix oauth ticket need mfa" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>